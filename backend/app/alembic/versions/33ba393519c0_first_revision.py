"""First revision

Revision ID: 33ba393519c0
Revises: 
Create Date: 2025-04-14 22:46:24.275260-07:00

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '33ba393519c0'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    sa.Enum('CREATE', 'UPDATE', 'DELETE', name='updatetype').create(op.get_bind())
    sa.Enum('LENS_TYPE', 'SPHERE', 'CYLINDER', 'UNIT_PRICE', 'QUANTITY', 'STORAGE_LIMIT', 'COMMENT', 'DELETED_AT', name='updatefield').create(op.get_bind())
    op.create_table('lenses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('lens_type', sa.String(), nullable=False),
    sa.Column('sphere', sa.Numeric(precision=4, scale=2), nullable=False),
    sa.Column('cylinder', sa.Numeric(precision=4, scale=2), nullable=False),
    sa.Column('unit_price', sa.Numeric(precision=5, scale=2), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('storage_limit', sa.Integer(), nullable=True),
    sa.Column('comment', sa.String(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('deleted_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_lenses_id'), 'lenses', ['id'], unique=False)
    op.create_table('lenses_history',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('lens_id', sa.Integer(), nullable=False),
    sa.Column('update_field', postgresql.ENUM('LENS_TYPE', 'SPHERE', 'CYLINDER', 'UNIT_PRICE', 'QUANTITY', 'STORAGE_LIMIT', 'COMMENT', 'DELETED_AT', name='updatefield', create_type=False), nullable=False),
    sa.Column('old_value', sa.String(), nullable=True),
    sa.Column('new_value', sa.String(), nullable=True),
    sa.Column('update_timestamp', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('update_type', postgresql.ENUM('CREATE', 'UPDATE', 'DELETE', name='updatetype', create_type=False), nullable=False),
    sa.Column('update_notes', sa.String(), nullable=True),
    sa.Column('update_source', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['lens_id'], ['lenses.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_lenses_history_id'), 'lenses_history', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_lenses_history_id'), table_name='lenses_history')
    op.drop_table('lenses_history')
    op.drop_index(op.f('ix_lenses_id'), table_name='lenses')
    op.drop_table('lenses')
    sa.Enum('LENS_TYPE', 'SPHERE', 'CYLINDER', 'UNIT_PRICE', 'QUANTITY', 'STORAGE_LIMIT', 'COMMENT', 'DELETED_AT', name='updatefield').drop(op.get_bind())
    sa.Enum('CREATE', 'UPDATE', 'DELETE', name='updatetype').drop(op.get_bind())
    # ### end Alembic commands ###
